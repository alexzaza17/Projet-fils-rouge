pipeline {
     environment {
       IMAGE_NAME = "ic-webapp"
       IMAGE_TAG = "8080"
       DOCKERHUB_ID = "alexzaza"
       DOCKERHUB_PASSWORD = credentials('dockerhub_password')
       
     }
     agent none
     stages {
         stage('Build image') {
             agent any
             steps {
                script {
                  sh 'docker build --no-cache -f ./Dockerfile_v1.0 -t alexzaza/$IMAGE_NAME:$IMAGE_TAG .'
                }
             }
        }
        stage('Run container based on builded image') {
            agent any
            steps {
               script {
                 sh '''
                    echo "Cleaning existing container if exist"
                    docker ps -a | grep -i $IMAGE_NAME && docker rm -f ${IMAGE_NAME}
                    docker run --name $IMAGE_NAME -d -p 8000:8080 alexzaza/$IMAGE_NAME:$IMAGE_TAG
                    sleep 5
                 '''
               }
            }
       }
       stage('Test image') {
           agent any
           steps {
              script {
                sh '''
                    curl http://${HOST_IP}:8000 | grep -i "200"
                '''
              }
           }
      }
      stage('Clean Container') {
          agent any
          steps {
             script {
               sh '''
                 docker stop $IMAGE_NAME
                 docker rm $IMAGE_NAME
               '''
             }
          }
     }
      stage ('Login and Push Image on docker hub') {  
        agent any
        steps {
          script {
            sh '''
                echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_ID --password-stdin
                docker push ${DOCKERHUB_ID}/$IMAGE_NAME:$IMAGE_TAG
               ''' 
          }
        } 
      }
       
    }    
}  
